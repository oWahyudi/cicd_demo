# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Source Codes
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B clean package

    - name: Create Package
      run: |
        mkdir staging 
        cp target/*.jar staging

    - name: Upload Package
      uses: actions/upload-artifact@v3
      with:
        name: Package
        path: staging

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Run Test with Maven
        run: mvn -B test

  sonar:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v3

      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarCloud Packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven Packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze on SonarCloud
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

  snyk:
    needs: test
    runs-on: ubuntu-latest
    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v3

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true
        with:
          args: --sarif-file-output=results.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  deploy:
    needs: 
      - build
      - test
      - sonar
      - snyk
      
    runs-on: ubuntu-latest
    env:
      EB_PACKAGE_S3_BUCKET : "zzz-cicd-demo-app"
      EB_APPLICATION_NAME  : "cicd-demo"
      EB_ENVIRONMENT_NAME  : "cicd-demo-env"
      DEPLOY_PACKAGE_NAME  : "cicd-demo-${{ github.sha }}.jar" 
      AWS_REGION           : "us-east-1"

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Copy JAR file to S3 bucket
        run: aws s3 cp /home/runner/work/cicd_demo/cicd_demo/staging/cicd_demo-0.0.1-SNAPSHOT.jar  s3://${{ env.EB_PACKAGE_S3_BUCKET }}/${{ env.DEPLOY_PACKAGE_NAME }}
      




